# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html

# The name of this app. Must be unique within a project.
name: 'app'

# The runtime the application uses.
type: 'php:5.6'

# Changed this to S, so that a worker could be added with same amount of CPU
size: 'S'

# Configuration of the build of this application.
build:
    flavor: drupal

# The build-time dependencies of the app.
dependencies:
    php:
        "drush/drush": "^8.0"

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: 'mysqldb:mysql'
#    solr: 'solrsearch:solr'
#    redis: 'rediscache:redis'

# The configuration of app when it is exposed to the web.
web:
    # Specific parameters for different URL prefixes.
    locations:
        '/':
            # The folder from which to serve static assets, for this location.
            #
            # This is a filesystem path, relative to the application root.
            root: 'public'

            # How long to allow static assets from this location to be cached.
            #
            # Can be a time in seconds, or -1 for no caching. Times can be
            # suffixed with "s" (seconds), "m" (minutes), "h" (hours), "d"
            # (days), "w" (weeks), "M" (months, as 30 days) or "y" (years, as
            # 365 days).
            expires: 5m

            # Whether to forward disallowed and missing resources from this
            # location to the application.
            #
            # Can be true, false or a URI path string.
            passthru: '/index.php'

            # Deny access to static files in this location.
            allow: false
            
            # Add some default headers.
            headers:
                X-Frame-Options: SAMEORIGIN
                X-Content-Type-Options: nosniff

            # Rules for specific URI patterns.
            rules:
                # Allow access to common static files.
                '\.(jpe?g|png|gif|svgz?|css|js|map|ico|bmp|eot|woff2?|otf|ttf)$':
                    allow: true
                '^/robots\.txt$':
                    allow: true
                '^/sitemap\.xml$':
                    allow: true

        '/sites/default/files':
            # Allow access to all files in the public files directory.
            allow: true
            expires: 5m
            passthru: '/index.php'
            root: 'public/sites/default/files'

            # Do not execute PHP scripts.
            scripts: false

            rules:
                # Provide a longer TTL (2 weeks) for aggregated CSS and JS files.
                '^/sites/default/files/(css|js)':
                    expires: 2w

# The size of the persistent disk of the application (in MB).
disk: 2048

# The mounts that will be performed when the package is deployed.
mounts:
    '/public/sites/default/files': 'shared:files/files'
    '/tmp': 'shared:files/tmp'
    '/private': 'shared:files/private'
    '/drush-backups': 'shared:files/drush-backups'

# The hooks executed at various points in the lifecycle of the application.

# rename some files in the imagesloaded library
# create a symlink for the multisite name
hooks:
    build: |
        set -e

        # Sets a symlink to the $BASE_URL platform variable to help convert from multisite
        cd /app/public/sites
        ln -s default $BASE_URL

        # Install Behat
        cd /app/public/sites/default/behat
        composer install
        bin/behat --init

        # Fix up the jquery.imagesloaded library if you have it installed
        #cd /app/public/sites/all/libraries/jquery.imagesloaded
        #cp imagesloaded.js jquery.imagesloaded.js
        #cp imagesloaded.pkgd.min.js jquery.imagesloaded.pkgd.min.js

    # We run deploy hook after your application has been deployed and started.
    deploy: |
        set -e

        # Update schema if needed
        cd public
        drush -y updatedb

        # Build and run Drush registry_rebuild
        drush dl registry_rebuild-7.x-2.3 --destination=/app/tmp
        sed -i 's/, define_drupal_root()/, '"'"'\/app\/public'"'"'/' /app/tmp/registry_rebuild/registry_rebuild.php
        cd /app/public
        php ../tmp/registry_rebuild/registry_rebuild.php

    post_deploy: |
        set -e

        # run behat shell script
        TARGET_URL="https://${BASE_URL}"
        cd /app/public/sites/default/behat
        sh ws_behat.sh ${TARGET_URL} $PLATFORM_ENVIRONMENT $PLATFORM_BRANCH
        
# The configuration of scheduled execution.
crons:
    drupal:
        spec: '*/20 * * * *'
        cmd: 'cd public ; drush core-cron'
    snapshot:
        spec: '15 3 * * *'
        cmd: |
            if [ "$PLATFORM_BRANCH" = master ]; then
                platform snapshot:create --yes --no-wait
            fi
# Add a custom worker
# Build fails, due to plan exceeding limit

#workers:
#    sync:
#        size: 'S'
#        commands:
#            start: |
#                php work.php
#        variables:
#            env:
#                type: 'worker'
#        disk: 512
